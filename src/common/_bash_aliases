alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
if [ "$PLATFORM" = "mingw" ] || [ "$PLATFORM" = "linux" ]; then alias ls='ls --color=auto'; fi
alias ll='ls -la'
alias la='ls -A'
alias l='ls -CF'
alias cls='clear && echo -e "\ec"'
alias cd..="cd .."
alias cd....="cd ../.."
alias rebash="[[ -f ~/.bashrc ]] && . ~/.bashrc || . ~/.bash_profile"
alias realias="unalias -a && rebash"
alias xx="exit"

# much short, very magic
alias g="git"
alias y="yarn"
if [ "$PLATFORM" = "mingw" ]; then alias y="node /c/Users/szabi/scoop/apps/yarn/current/Yarn/lib/cli.js"; fi
alias d="docker"
if [ "$PLATFORM" = "mingw" ]; then alias d='winpty docker'; fi
alias p='pm2'

# npm and yarn
alias nuke="rm -rf ./node_modules && npm cache clear --force && npm install --no-shrinkwrap --update-binary"
alias npmr='npm run'
alias npmrd='npm run dev'
alias npmt='npm test'
alias npmrt='npm test'
alias npmtw='npm run test:watch'
alias npmrtw='npm run test:watch'
alias npmrl='npm run lint'
alias npmi='npm install && git checkout package-lock.json'
alias yadd='y add -D'
alias yins='y install'
alias yrem='y remove'
alias ys='y start'
alias yc='y clean'
alias yex='y start:exposed'

if [ "$PLATFORM" = "linux" ]; then
  alias pbcopy='xclip -selection clipboard'
  alias pbpaste='xclip -selection clipboard -o'
fi

# editors
alias nano='nano -x -w -z -H'
alias na='nano'
alias geany='geany'
if [ "$PLATFORM" = "macos" ]; then alias geany='open -a geany'; fi
if [ "$PLATFORM" = "mingw" ]; then alias geany='/c/Program\ Files\ \(x86\)/Geany/bin/geany.exe'; fi
alias vscode='code'

# frontend helpers
alias feins='./install.sh frontend'
alias beins='./install.sh backend'
alias felog='d logs viddo_frontend_1 -f'
alias feenter="d exec -it viddo_frontend_1 bash"
alias fedown="./down.sh frontend"
alias feup="./up.sh frontend"
alias bedown="./down.sh backend"
alias beup="./up.sh backend"
alias fecycle="fedown && feup"
alias feserve="APP_WEBPACK_PORT=4000 NODE_ENV=development npx webpack-dev-server"
function fenode () { d exec -it viddo_frontend_1 sh -c "node $*"; }

# edit popular files
alias edbp='na ~/.bash_profile'
alias edbrc='na ~/.bashrc'
alias edba='na ~/.bash_aliases'
alias edgc='na ~/.gitconfig'
alias edgi='na ~/.gitignore'

# viddo docker
function vd-credits () {
  d exec -it viddo_mysql_1 mysql --password=$VIDDO_SQL_PASSWORD -e "UPDATE balance SET amount=80000" viddo
  echo Added credits to everyone
}

# git (is_git_clean seems to work fine on mac and mingw, but not on linux though)
function is_git_clean() {
  git_status="$(git status 2> /dev/null)"
  if [[ -n "$git_status" && ! ${git_status}} =~ "working directory clean" && ! ${git_status}} =~ "working tree clean" ]]; then
    printf "%b" "\e[1;31m!\e[0m"
  fi
}
function markup_git_branch() {
  if [[ -n $@ ]]; then
    if [[ -z $(git status --porcelain 2> /dev/null) ]]; then
      echo -e " \001\033[32m\002($@)\001\033[0m\002"
    else
      echo -e " \001\033[31m\002($@)\001\033[0m\002"
    fi
  fi
}
function parse_git_branch() { git branch --color=never 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/' | sed -e 's/feature/F/'; }

# misc
function mdcd () { mkdir -p "$@" && cd "$@"; }
alias md="mdcd"
function title() { echo -ne "\033]0;${1}\007"; }
alias t="title"
function titleprefix() { TITLEPREFIX="$1"; }
alias tp="titleprefix"
function jpg2mp4 () { ffmpeg -loop 1 -i "$1" -c:v libx264 -t 15 -pix_fmt yuv420p "$1.mp4"; }

# my file and mpd server, an ancient netbook
# for mingw use git sdk shell and `pacman -S expect`
function vacak_mpd() {
  NCMPCPP=1 expect -c '
    spawn ssh -o SendEnv=NCMPCPP szabi@$::env(VACAK_IP) -p1922
    log_user 0
    expect "assword:"; send "$::env(VACAK_PASSWORD)\r"
    interact
  '
}
function vacak_shell() {
  expect -c '
    spawn ssh szabi@$::env(VACAK_IP) -p1922
    log_user 0
    expect "assword:"; send "$::env(VACAK_PASSWORD)\r"
    interact
  '
}
